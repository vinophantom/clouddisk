<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"

       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd">
       <!--http://www.springframework.org/schema/data/jpa">-->
    <!-- http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd">-->
    <!-- 读取配置文件 -->
    <util:properties id="dbCfg" location="classpath:db.properties"/>
    <!-- 注解扫描 -->
    <context:annotation-config/>

    <context:component-scan base-package="com.phantom.dao" />
    <!--<context:component-scan base-package="com.phantom.service.impl" />-->
    <context:component-scan base-package="com.phantom.service" />
    <context:component-scan base-package="com.phantom.util" />
    <!--<context:component-scan base-package="com.ums.dao" />-->
    <!--<context:component-scan base-package="com.phantom.**.basedao"/>-->
    <!--配置DruidDataSource连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close" init-method="init" lazy-init="true">
        <property name="driverClassName" value="#{dbCfg.driver}" />
        <property name="url" value="#{dbCfg.url}" />
        <property name="username" value="#{dbCfg.username}" />
        <property name="password" value="#{dbCfg.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="#{dbCfg.initialSize}" />
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="#{dbCfg.maxActive}" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="#{dbCfg.minIdle}" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="#{dbCfg.maxWait}" />
    </bean>

    <bean name="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <!-- 使用hibernate.cfg.xml配置文件 -->
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>
                <value>hbm/SysUser.hbm.xml</value>
                <value>hbm/SysUserImage.hbm.xml</value>
                <value>hbm/UserFile.hbm.xml</value>
                <value>hbm/UserFolder.hbm.xml</value>
                <value>hbm/OriginFile.hbm.xml</value>
                <!--<value>com/hycrm/bean/Customer.hbm.xml</value>
             --></list>
        </property>
        <!--<property name="mappingLocations" value="classpath:com/phantom/entity/*.hbm.xml"></property>-->
    </bean>

    <!-- hibernate事务管理 -->
    <!-- 事务管理器 ：HibernateTransactionManager -->
    <bean id="hibernateTxManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" >
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 事务详情 ，给ABC进行具体事务设置 -->
    <tx:advice id="txAdvice" transaction-manager="hibernateTxManager">
        <tx:attributes>
            <tx:method name="register"/>
        </tx:attributes>
    </tx:advice>
    <!-- hibernate3 模板类 -->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- jdbcTemplate -->
    <!--JDBC模板类,用于注入到JdbcSupport -->
    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource"><ref bean="dataSource"/></property>
    </bean>

    <!-- jdbcTemplate事务管理器 -->
    <bean id="jdbcTemplateTxManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
    </bean>
    <bean id="transactionProxy" abstract="true" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="jdbcTemplateTxManager"/>
        </property>
        <!-- 使用  cglib.jar代理类-->
        <property name="proxyTargetClass">
            <value>true</value>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="init*">PROPAGATION_REQUIRED</prop>
                <prop key="save*">PROPAGATION_REQUIRED</prop>
                <prop key="add*">PROPAGATION_REQUIRED</prop>
                <prop key="insert*">PROPAGATION_REQUIRED</prop>
                <prop key="remove*">PROPAGATION_REQUIRED</prop>
                <prop key="delete*">PROPAGATION_REQUIRED</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="create*">PROPAGATION_REQUIRED</prop>
                <prop key="query*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="uploadFile">PROPAGATION_REQUIRED</prop>
                <prop key="import*">PROPAGATION_REQUIRED</prop>
                <prop key="do*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
</beans>